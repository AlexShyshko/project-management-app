.board-wrapper {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
}

.page-title {
  font-size: 2rem;
  width: 100%;
  color: var(--main-color);
  margin-bottom: 20px;
}

.wrapper {
  max-width: 1440px;
  height: 80vh;
  width: 100%;
  margin: 0 auto;
  padding: 20px;
  display: flex;
  flex-direction: column;
}

.columns-container {
  margin: 0 auto;
  display: flex;
  flex: 1 1 auto;
  justify-content: flex-start;
  align-items: flex-start;
  gap: 10px 20px;
  overflow-x: auto;
  min-height: 61vh;
}

.column-container {
  width: 300px;
  background-color: var(--text-color-light);
  border-radius: 5px;
  border: 1px solid var(--main-color);
  padding: 5px 10px;
  max-height: 60vh;
  position: relative;
  flex-shrink : 0;
}

.task-container {
  overflow-y: auto;
  overflow-x: hidden;
  max-height: 45vh;
  position: relative;
  display: flex;
  flex-direction: column;
}

.add-new-column {
  color: var(--main-color);
  text-align: left;
  width: 70%;
}

::ng-deep .mat-form-field-underline {
  background-color: var(--main-color);
  height: 3px;
}

::ng-deep .mat-icon {
  color: var(--main-color);
}

::ng-deep .mat-icon:hover {
  color: var(--error-color);
}

.add-column-button {
  background-color: var(--main-color);
  color: var(--text-color-light);
}

.new-column-buttons {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.add-column-input {
  width: 100%;
}

.column-title-block {
  display: flex;
  align-items: center;
}

.column-title {
  height: 65px;
  color: var(--main-color);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  cursor: default;
}

.card-title {
  padding: 5px 40px;
  background-color: #fff;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-shadow: 5px 5px 5px -5px rgba(34, 60, 80, 0.6);
  -moz-box-shadow: 5px 5px 5px -5px rgba(34, 60, 80, 0.6);
  box-shadow: 5px 5px 5px -5px rgba(34, 60, 80, 0.6);
  margin-bottom: 8px;
  border-radius: 5px;
  transition: 0.3s ease-in-out;
  &:hover {
    transition: 0.3s ease-in-out;
    transform: scale(1.01);
    background-color: var(--main-color);
    color: var(--text-color-light);
  }
}

.mat-icon-button.delete-task-btn {
  position: absolute;
  left: 85%;
  z-index: 100;
  width: 20px;
  height: 20px;
  line-height: 30px;
}

.column-control-buttons {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 30px;
}

.back-btn {
  position: absolute;
  bottom: 10px;
}

.home-button {
  margin-top: 20px;
  width: 130px;
  height: 40px;
  border-radius: 5px;

  font-size: 14px;
  line-height: 14px;

  color: var(--main-color);
  background-color: var(--text-color-light);

  transition: 0.3s ease-in-out;

  &:disabled {
    cursor: not-allowed;
    &:hover {
      background-color: var(--buttons-disabled-hover-color);
    }
  }
  &:hover {
    background-color: var(--buttons-hover-color);
    transition: 0.3s ease-in-out;
  }
}

.task-list {
  overflow: hidden;
}

.task-box {
  cursor: move;
}

.cdk-drag-preview {
  box-sizing: border-box;
  border-radius: 4px;
}

.cdk-drag-placeholder {
  opacity: 0;
}

.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.task-box:last-child {
  border: none;
}

.task-list.cdk-drop-list-dragging .task-box:not(.cdk-drag-placeholder) {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.mat-input-element::-webkit-input-placeholder {
    color: var(--main-color);
}

.checkbox {
  position: absolute;
  left: 5%;
  z-index: 100;
  &:hover {
    transform: scale(1.1);
  }
}

::ng-deep .checkbox .mat-checkbox-background {
  border: 1px solid var(--main-color);
}

::ng-deep .mat-checkbox-checked.mat-accent .mat-checkbox-background {
  background-color: var(--main-color);
}

::ng-deep .mat-checkbox-checkmark-path {
    stroke: var(--text-color-light) !important;
}

::ng-deep .mat-checkbox:not(.mat-checkbox-disabled) .mat-checkbox-ripple .mat-ripple-element {
  background-color: var(--main-color) !important;
}

.task-done {
  text-decoration: line-through;
  color: var(--main-color);
}
